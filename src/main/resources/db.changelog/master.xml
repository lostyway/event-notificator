<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
                      http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-4.9.xsd">

    <changeSet id="1" author="lostway">
        <preConditions onFail="MARK_RAN">
            <not>
                <tableExists tableName="changelogs"/>
            </not>
        </preConditions>
        <comment>Создание таблицы changelogs</comment>
        <sql>
            create table changelogs
            (
                id          bigserial primary key,
                event_id    bigint not null,
                name        jsonb,
                max_places  jsonb,
                date        jsonb,
                cost        jsonb,
                duration    jsonb,
                location_id jsonb
            );
        </sql>
        <rollback>drop table if exists changelogs cascade</rollback>
    </changeSet>
    <changeSet id="2" author="lostway">
        <preConditions onFail="MARK_RAN">
            <not>
                <tableExists tableName="notifications"/>
            </not>
        </preConditions>
        <comment>Создание таблицы notifications</comment>
        <sql>
            create table notifications
            (
                id                 bigserial primary key,
                user_id            bigint,
                event_id           bigint    not null,
                is_read            boolean   not null,
                changelog          bigint references changelogs (id),
                created_at         timestamp not null,
                user_to_notificate bigint    not null
            );
        </sql>
    </changeSet>
    <changeSet id="3" author="lostway">
        <preConditions onFail="MARK_RAN">
            <not>
                <tableExists tableName="status_notifications"/>
            </not>
        </preConditions>
        <comment>Создание таблицы status_notifications</comment>
        <sql>
            create table status_notifications
            (
                id          bigserial primary key,
                message     text   not null,
                event_id    bigint not null,
                new_status  text   not null,
                change_time timestamp
            );
        </sql>
    </changeSet>
</databaseChangeLog>